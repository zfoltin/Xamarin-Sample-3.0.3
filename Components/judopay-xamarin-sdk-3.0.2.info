{"Name":"Judopay Xamarin SDK","Id":3383,"Alias":"judopay-xamarin-sdk","Description":"The Judopay SDK lets you integrate card payments into your Xamarin.Forms project, built to be mobile-first with ease of integration in mind. Judopayâ€™s SDK enables a simple, frictionless and protected payments experience within your app. \n\n## Features\nAll-in-one payments SDK for simple integration and maintenance, featuring:\n- Xamarin.Forms compatibility\n- Built-in support for Apple Pay and Android Pay \n- Customizable UI to match your app design\n- Built-in fraud prevention with JudoShield\n- PCI Level 1 compliance \n\n## Next steps\nThe Judopay Xamarin SDK supports a range of customization options. For more information on using Judopay for Xamarin see our [wiki documentation](https://github.com/JudoPay/Judo-Xamarin/wiki).\n\n## About Judopay\nJudopay simplifies in-app payments, enables frictionless checkouts and intelligently prevents fraud for leading companies globally. Our payments and mobile experts help guide businesses and their development partners to create best in class apps to make paying faster, easier and more secure.\n\nLearn more about [Judopay](https://www.judopay.com/).\n","Version":"3.0.2","Summary":"Judopay SDK for Xamarin","QuickStart":"The Judopay library lets you integrate card payments into your Xamarin.Forms project. It is built to be mobile first with ease of integration in mind. Judopay\u0027s SDK enables a faster, simpler and more secure payment experience within your app. Build trust and user loyalty in your app with our secure and intuitive UX.\n\n##### **\\*\\*\\*Due to industry-wide security updates, versions below 2.3.0 of this SDK will no longer be supported after 1st Oct 2016. For more information regarding these updates, please read our blog [here](http://hub.judopay.com/pci31-security-updates/ \"Security Blog\").*****\n\n## Requirements\n- Xamarin Studio 6.1 / Visual Studio 2015\n- Xamarin Forms 2.3.2.127\n- Xcode 8\n- Android 7.0 (API 24) SDK and build tools 24.0.3 installed\n\nThe SDK is compatible with Android Jelly Bean (4.1) and above and iOS 8 and above.\n\n## Getting started\n\n#### 1. Integration\n\nIn the Xamarin component store, search for \u0027Judopay\u0027 and add the component to your app, Android and iOS projects.\n\n#### 2. Setup\n\nIn your Xamarin Forms page, create a new Judo instance:\n\n```csharp\nvar judo = new Judo()\n{\n    JudoId = \"\u003cJUDO_ID\u003e\",\n    ApiToken = \"\u003cAPI_TOKEN\u003e\",\n    ApiSecret = \"\u003cAPI_SECRET\u003e\",\n    Environment = JudoEnvironment.Sandbox,\n    Amount = 1.50m,\n    Currency = \"GBP\",\n    ConsumerReference = \"YourUniqueReference\"\n};\n```\n\n__Note:__ Please make sure that you are using a unique Consumer Reference for each different consumer.\n\n#### 3. Configure iOS and Android projects\n\nAndroid and iOS require additional steps to get set up with the Xamarin SDK. See the [guide to initializing the SDK](https://github.com/JudoPay/Judo-Xamarin/wiki/Initializing-the-SDK) for more information.\n\n#### 4. Make a payment\n\nCreate a PaymentPage to show the card payment screen:\n\n```chsarp\nvar paymentPage = new PaymentPage(judo);\nNavigation.PushAsync(paymentPage);\n```\n\n#### 4. Check the payment result\n\nReceive the result of the payment:\n\n```csharp\npaymentPage.resultHandler += async (sender, result) =\u003e\n{\n\tif (\"Success\".Equals(result.Response.Result))\n\t{\n\t\t// handle successful payment\n\t\t// close payment page\n\t\tawait Navigation.PopAsync();\n\t}\n};\n```\n\n## Next steps\n\nThe Judopay Xamarin library supports a range of customization options. For more information on using Judopay for Xamarin see our [wiki documentation](https://github.com/JudoPay/Judo-Xamarin/wiki).\n","Hash":"7583ec049c051455624528906346bab1","TargetPlatforms":["ios","ios-unified","android"],"TrialHash":null}